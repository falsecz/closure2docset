<!doctype html>

<html>
<head>
  <link rel="shortcut icon" href="static/images/favicon.ico" type="image/x-icon">
  <title>transitionbase.js (Closure Library API Documentation - JavaScript)</title>
  <link rel="stylesheet" href="static/css/base.css">
  <link rel="stylesheet" href="static/css/doc.css">
  <link rel="stylesheet" href="static/css/sidetree.css">
  <link rel="stylesheet" href="static/css/prettify.css">

  <script>
     var _staticFilePath = "static/";
     var _typeTreeName = "goog";
     var _fileTreeName = "Source";
  </script>

  <script src="static/js/doc.js">
  </script>


  <meta charset="utf8">
</head>

<body onload="grokdoc.onLoad();">

<div id="header">
  <div class="g-section g-tpl-50-50 g-split">
    <div class="g-unit g-first">
      <a id="logo" href="index.html">Closure Library API Documentation</a>
    </div>

    <div class="g-unit">
      <div class="g-c">
        <strong>Go to class or file:</strong>
        <input type="text" id="ac">
      </div>
    </div>
  </div>
</div>

<div class="clear"></div>

<h2><a href="closure_goog_fx_transitionbase.js.html">transitionbase.js</a></h2>

<pre class="prettyprint lang-js">
<a name="line1"></a>// Copyright 2011 The Closure Library Authors. All Rights Reserved.
<a name="line2"></a>//
<a name="line3"></a>// Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
<a name="line4"></a>// you may not use this file except in compliance with the License.
<a name="line5"></a>// You may obtain a copy of the License at
<a name="line6"></a>//
<a name="line7"></a>//      http://www.apache.org/licenses/LICENSE-2.0
<a name="line8"></a>//
<a name="line9"></a>// Unless required by applicable law or agreed to in writing, software
<a name="line10"></a>// distributed under the License is distributed on an &quot;AS-IS&quot; BASIS,
<a name="line11"></a>// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<a name="line12"></a>// See the License for the specific language governing permissions and
<a name="line13"></a>// limitations under the License.
<a name="line14"></a>
<a name="line15"></a>/**
<a name="line16"></a> * @fileoverview An abstract base class for transitions. This is a simple
<a name="line17"></a> * interface that allows for playing, pausing and stopping an animation. It adds
<a name="line18"></a> * a simple event model, and animation status.
<a name="line19"></a> */
<a name="line20"></a>goog.provide(&#39;goog.fx.TransitionBase&#39;);
<a name="line21"></a>goog.provide(&#39;goog.fx.TransitionBase.State&#39;);
<a name="line22"></a>
<a name="line23"></a>goog.require(&#39;goog.events.EventTarget&#39;);
<a name="line24"></a>goog.require(&#39;goog.fx.Transition&#39;);  // Unreferenced: interface
<a name="line25"></a>goog.require(&#39;goog.fx.Transition.EventType&#39;);
<a name="line26"></a>
<a name="line27"></a>
<a name="line28"></a>
<a name="line29"></a>/**
<a name="line30"></a> * Constructor for a transition object.
<a name="line31"></a> *
<a name="line32"></a> * @constructor
<a name="line33"></a> * @implements {goog.fx.Transition}
<a name="line34"></a> * @extends {goog.events.EventTarget}
<a name="line35"></a> */
<a name="line36"></a>goog.fx.TransitionBase = function() {
<a name="line37"></a>  goog.base(this);
<a name="line38"></a>
<a name="line39"></a>  /**
<a name="line40"></a>   * The internal state of the animation.
<a name="line41"></a>   * @type {goog.fx.TransitionBase.State}
<a name="line42"></a>   * @private
<a name="line43"></a>   */
<a name="line44"></a>  this.state_ = goog.fx.TransitionBase.State.STOPPED;
<a name="line45"></a>
<a name="line46"></a>  /**
<a name="line47"></a>   * Timestamp for when the animation was started.
<a name="line48"></a>   * @type {?number}
<a name="line49"></a>   * @protected
<a name="line50"></a>   */
<a name="line51"></a>  this.startTime = null;
<a name="line52"></a>
<a name="line53"></a>  /**
<a name="line54"></a>   * Timestamp for when the animation finished or was stopped.
<a name="line55"></a>   * @type {?number}
<a name="line56"></a>   * @protected
<a name="line57"></a>   */
<a name="line58"></a>  this.endTime = null;
<a name="line59"></a>};
<a name="line60"></a>goog.inherits(goog.fx.TransitionBase, goog.events.EventTarget);
<a name="line61"></a>
<a name="line62"></a>
<a name="line63"></a>/**
<a name="line64"></a> * Enum for the possible states of an animation.
<a name="line65"></a> * @enum {number}
<a name="line66"></a> */
<a name="line67"></a>goog.fx.TransitionBase.State = {
<a name="line68"></a>  STOPPED: 0,
<a name="line69"></a>  PAUSED: -1,
<a name="line70"></a>  PLAYING: 1
<a name="line71"></a>};
<a name="line72"></a>
<a name="line73"></a>
<a name="line74"></a>/**
<a name="line75"></a> * Plays the animation.
<a name="line76"></a> *
<a name="line77"></a> * @param {boolean=} opt_restart Optional parameter to restart the animation.
<a name="line78"></a> * @return {boolean} True iff the animation was started.
<a name="line79"></a> */
<a name="line80"></a>goog.fx.TransitionBase.prototype.play = goog.abstractMethod;
<a name="line81"></a>
<a name="line82"></a>
<a name="line83"></a>/**
<a name="line84"></a> * Stops the animation.
<a name="line85"></a> *
<a name="line86"></a> * @param {boolean=} opt_gotoEnd Optional boolean parameter to go the the end of
<a name="line87"></a> *     the animation.
<a name="line88"></a> */
<a name="line89"></a>goog.fx.TransitionBase.prototype.stop = goog.abstractMethod;
<a name="line90"></a>
<a name="line91"></a>
<a name="line92"></a>/**
<a name="line93"></a> * Pauses the animation.
<a name="line94"></a> */
<a name="line95"></a>goog.fx.TransitionBase.prototype.pause = goog.abstractMethod;
<a name="line96"></a>
<a name="line97"></a>
<a name="line98"></a>/**
<a name="line99"></a> * Returns the current state of the animation.
<a name="line100"></a> * @return {goog.fx.TransitionBase.State} State of the animation.
<a name="line101"></a> */
<a name="line102"></a>goog.fx.TransitionBase.prototype.getStateInternal = function() {
<a name="line103"></a>  return this.state_;
<a name="line104"></a>};
<a name="line105"></a>
<a name="line106"></a>
<a name="line107"></a>/**
<a name="line108"></a> * Sets the current state of the animation to playing.
<a name="line109"></a> * @protected
<a name="line110"></a> */
<a name="line111"></a>goog.fx.TransitionBase.prototype.setStatePlaying = function() {
<a name="line112"></a>  this.state_ = goog.fx.TransitionBase.State.PLAYING;
<a name="line113"></a>};
<a name="line114"></a>
<a name="line115"></a>
<a name="line116"></a>/**
<a name="line117"></a> * Sets the current state of the animation to paused.
<a name="line118"></a> * @protected
<a name="line119"></a> */
<a name="line120"></a>goog.fx.TransitionBase.prototype.setStatePaused = function() {
<a name="line121"></a>  this.state_ = goog.fx.TransitionBase.State.PAUSED;
<a name="line122"></a>};
<a name="line123"></a>
<a name="line124"></a>
<a name="line125"></a>/**
<a name="line126"></a> * Sets the current state of the animation to stopped.
<a name="line127"></a> * @protected
<a name="line128"></a> */
<a name="line129"></a>goog.fx.TransitionBase.prototype.setStateStopped = function() {
<a name="line130"></a>  this.state_ = goog.fx.TransitionBase.State.STOPPED;
<a name="line131"></a>};
<a name="line132"></a>
<a name="line133"></a>
<a name="line134"></a>/**
<a name="line135"></a> * @return {boolean} True iff the current state of the animation is playing.
<a name="line136"></a> */
<a name="line137"></a>goog.fx.TransitionBase.prototype.isPlaying = function() {
<a name="line138"></a>  return this.state_ == goog.fx.TransitionBase.State.PLAYING;
<a name="line139"></a>};
<a name="line140"></a>
<a name="line141"></a>
<a name="line142"></a>/**
<a name="line143"></a> * @return {boolean} True iff the current state of the animation is paused.
<a name="line144"></a> */
<a name="line145"></a>goog.fx.TransitionBase.prototype.isPaused = function() {
<a name="line146"></a>  return this.state_ == goog.fx.TransitionBase.State.PAUSED;
<a name="line147"></a>};
<a name="line148"></a>
<a name="line149"></a>
<a name="line150"></a>/**
<a name="line151"></a> * @return {boolean} True iff the current state of the animation is stopped.
<a name="line152"></a> */
<a name="line153"></a>goog.fx.TransitionBase.prototype.isStopped = function() {
<a name="line154"></a>  return this.state_ == goog.fx.TransitionBase.State.STOPPED;
<a name="line155"></a>};
<a name="line156"></a>
<a name="line157"></a>
<a name="line158"></a>/**
<a name="line159"></a> * Dispatches the BEGIN event. Sub classes should override this instead
<a name="line160"></a> * of listening to the event, and call this instead of dispatching the event.
<a name="line161"></a> * @protected
<a name="line162"></a> */
<a name="line163"></a>goog.fx.TransitionBase.prototype.onBegin = function() {
<a name="line164"></a>  this.dispatchAnimationEvent(goog.fx.Transition.EventType.BEGIN);
<a name="line165"></a>};
<a name="line166"></a>
<a name="line167"></a>
<a name="line168"></a>/**
<a name="line169"></a> * Dispatches the END event. Sub classes should override this instead
<a name="line170"></a> * of listening to the event, and call this instead of dispatching the event.
<a name="line171"></a> * @protected
<a name="line172"></a> */
<a name="line173"></a>goog.fx.TransitionBase.prototype.onEnd = function() {
<a name="line174"></a>  this.dispatchAnimationEvent(goog.fx.Transition.EventType.END);
<a name="line175"></a>};
<a name="line176"></a>
<a name="line177"></a>
<a name="line178"></a>/**
<a name="line179"></a> * Dispatches the FINISH event. Sub classes should override this instead
<a name="line180"></a> * of listening to the event, and call this instead of dispatching the event.
<a name="line181"></a> * @protected
<a name="line182"></a> */
<a name="line183"></a>goog.fx.TransitionBase.prototype.onFinish = function() {
<a name="line184"></a>  this.dispatchAnimationEvent(goog.fx.Transition.EventType.FINISH);
<a name="line185"></a>};
<a name="line186"></a>
<a name="line187"></a>
<a name="line188"></a>/**
<a name="line189"></a> * Dispatches the PAUSE event. Sub classes should override this instead
<a name="line190"></a> * of listening to the event, and call this instead of dispatching the event.
<a name="line191"></a> * @protected
<a name="line192"></a> */
<a name="line193"></a>goog.fx.TransitionBase.prototype.onPause = function() {
<a name="line194"></a>  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PAUSE);
<a name="line195"></a>};
<a name="line196"></a>
<a name="line197"></a>
<a name="line198"></a>/**
<a name="line199"></a> * Dispatches the PLAY event. Sub classes should override this instead
<a name="line200"></a> * of listening to the event, and call this instead of dispatching the event.
<a name="line201"></a> * @protected
<a name="line202"></a> */
<a name="line203"></a>goog.fx.TransitionBase.prototype.onPlay = function() {
<a name="line204"></a>  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PLAY);
<a name="line205"></a>};
<a name="line206"></a>
<a name="line207"></a>
<a name="line208"></a>/**
<a name="line209"></a> * Dispatches the RESUME event. Sub classes should override this instead
<a name="line210"></a> * of listening to the event, and call this instead of dispatching the event.
<a name="line211"></a> * @protected
<a name="line212"></a> */
<a name="line213"></a>goog.fx.TransitionBase.prototype.onResume = function() {
<a name="line214"></a>  this.dispatchAnimationEvent(goog.fx.Transition.EventType.RESUME);
<a name="line215"></a>};
<a name="line216"></a>
<a name="line217"></a>
<a name="line218"></a>/**
<a name="line219"></a> * Dispatches the STOP event. Sub classes should override this instead
<a name="line220"></a> * of listening to the event, and call this instead of dispatching the event.
<a name="line221"></a> * @protected
<a name="line222"></a> */
<a name="line223"></a>goog.fx.TransitionBase.prototype.onStop = function() {
<a name="line224"></a>  this.dispatchAnimationEvent(goog.fx.Transition.EventType.STOP);
<a name="line225"></a>};
<a name="line226"></a>
<a name="line227"></a>
<a name="line228"></a>/**
<a name="line229"></a> * Dispatches an event object for the current animation.
<a name="line230"></a> * @param {string} type Event type that will be dispatched.
<a name="line231"></a> * @protected
<a name="line232"></a> */
<a name="line233"></a>goog.fx.TransitionBase.prototype.dispatchAnimationEvent = function(type) {
<a name="line234"></a>  this.dispatchEvent(type);
<a name="line235"></a>};
</pre>


</body>
</html>
