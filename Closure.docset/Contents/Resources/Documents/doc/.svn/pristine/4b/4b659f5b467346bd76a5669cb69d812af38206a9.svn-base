<!doctype html>

<html>
<head>
  <link rel="shortcut icon" href="static/images/favicon.ico" type="image/x-icon">
  <title>portnetwork.js (Closure Library API Documentation - JavaScript)</title>
  <link rel="stylesheet" href="static/css/base.css">
  <link rel="stylesheet" href="static/css/doc.css">
  <link rel="stylesheet" href="static/css/sidetree.css">
  <link rel="stylesheet" href="static/css/prettify.css">

  <script>
     var _staticFilePath = "static/";
     var _typeTreeName = "goog";
     var _fileTreeName = "Source";
  </script>

  <script src="static/js/doc.js">
  </script>


  <meta charset="utf8">
</head>

<body onload="grokdoc.onLoad();">

<div id="header">
  <div class="g-section g-tpl-50-50 g-split">
    <div class="g-unit g-first">
      <a id="logo" href="index.html">Closure Library API Documentation</a>
    </div>

    <div class="g-unit">
      <div class="g-c">
        <strong>Go to class or file:</strong>
        <input type="text" id="ac">
      </div>
    </div>
  </div>
</div>

<div class="clear"></div>

<h2><a href="closure_goog_messaging_portnetwork.js.html">portnetwork.js</a></h2>

<pre class="prettyprint lang-js">
<a name="line1"></a>// Copyright 2011 The Closure Library Authors. All Rights Reserved.
<a name="line2"></a>//
<a name="line3"></a>// Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
<a name="line4"></a>// you may not use this file except in compliance with the License.
<a name="line5"></a>// You may obtain a copy of the License at
<a name="line6"></a>//
<a name="line7"></a>//      http://www.apache.org/licenses/LICENSE-2.0
<a name="line8"></a>//
<a name="line9"></a>// Unless required by applicable law or agreed to in writing, software
<a name="line10"></a>// distributed under the License is distributed on an &quot;AS-IS&quot; BASIS,
<a name="line11"></a>// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<a name="line12"></a>// See the License for the specific language governing permissions and
<a name="line13"></a>// limitations under the License.
<a name="line14"></a>
<a name="line15"></a>/**
<a name="line16"></a> * @fileoverview An interface for classes that connect a collection of HTML5
<a name="line17"></a> * message-passing entities ({@link MessagePort}s, {@link Worker}s, and
<a name="line18"></a> * {@link Window}s) and allow them to seamlessly communicate with one another.
<a name="line19"></a> *
<a name="line20"></a> * Conceptually, a PortNetwork is a collection of JS contexts, such as pages (in
<a name="line21"></a> * or outside of iframes) or web workers. Each context has a unique name, and
<a name="line22"></a> * each one can communicate with any of the others in the same network. This
<a name="line23"></a> * communication takes place through a {@link goog.messaging.PortChannel} that
<a name="line24"></a> * is retrieved via {#link goog.messaging.PortNetwork#dial}.
<a name="line25"></a> *
<a name="line26"></a> * One context (usually the main page) has a
<a name="line27"></a> * {@link goog.messaging.PortOperator}, which is in charge of connecting each
<a name="line28"></a> * context to each other context. All other contexts have
<a name="line29"></a> * {@link goog.messaging.PortCaller}s which connect to the operator.
<a name="line30"></a> *
<a name="line31"></a> */
<a name="line32"></a>
<a name="line33"></a>goog.provide(&#39;goog.messaging.PortNetwork&#39;);
<a name="line34"></a>
<a name="line35"></a>
<a name="line36"></a>
<a name="line37"></a>/**
<a name="line38"></a> * @interface
<a name="line39"></a> */
<a name="line40"></a>goog.messaging.PortNetwork = function() {};
<a name="line41"></a>
<a name="line42"></a>
<a name="line43"></a>/**
<a name="line44"></a> * Returns a message channel that communicates with the named context. If no
<a name="line45"></a> * such port exists, an error will either be thrown immediately or after a round
<a name="line46"></a> * trip with the operator, depending on whether this pool is the operator or a
<a name="line47"></a> * caller.
<a name="line48"></a> *
<a name="line49"></a> * If context A calls dial(&#39;B&#39;) and context B calls dial(&#39;A&#39;), the two
<a name="line50"></a> * ports returned will be connected to one another.
<a name="line51"></a> *
<a name="line52"></a> * @param {string} name The name of the context to get.
<a name="line53"></a> * @return {goog.messaging.MessageChannel} The channel communicating with the
<a name="line54"></a> *     given context. This is either a {@link goog.messaging.PortChannel} or a
<a name="line55"></a> *     decorator around a PortChannel, so it&#39;s safe to send {@link MessagePorts}
<a name="line56"></a> *     across it. This will be disposed along with the PortNetwork.
<a name="line57"></a> */
<a name="line58"></a>goog.messaging.PortNetwork.prototype.dial = function(name) {};
<a name="line59"></a>
<a name="line60"></a>
<a name="line61"></a>/**
<a name="line62"></a> * The name of the service exported by the operator for creating a connection
<a name="line63"></a> * between two callers.
<a name="line64"></a> *
<a name="line65"></a> * @type {string}
<a name="line66"></a> * @const
<a name="line67"></a> */
<a name="line68"></a>goog.messaging.PortNetwork.REQUEST_CONNECTION_SERVICE = &#39;requestConnection&#39;;
<a name="line69"></a>
<a name="line70"></a>
<a name="line71"></a>/**
<a name="line72"></a> * The name of the service exported by the callers for adding a connection to
<a name="line73"></a> * another context.
<a name="line74"></a> *
<a name="line75"></a> * @type {string}
<a name="line76"></a> * @const
<a name="line77"></a> */
<a name="line78"></a>goog.messaging.PortNetwork.GRANT_CONNECTION_SERVICE = &#39;grantConnection&#39;;
</pre>


</body>
</html>
