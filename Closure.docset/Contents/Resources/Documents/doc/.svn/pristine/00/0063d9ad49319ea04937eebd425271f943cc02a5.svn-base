<!doctype html>


<html>
<head>
  <link rel="shortcut icon" href="static/images/favicon.ico" type="image/x-icon">
  <title>debug (Closure Library API Documentation - JavaScript)</title>
  <link rel="stylesheet" href="static/css/base.css">
  <link rel="stylesheet" href="static/css/doc.css">
  <link rel="stylesheet" href="static/css/sidetree.css">
  <link rel="stylesheet" href="static/css/prettify.css">

  <script>
     var _staticFilePath = "static/";
     var _typeTreeName = "goog";
     var _fileTreeName = "Source";
  </script>

  <script src="static/js/doc.js">
  </script>


  <meta charset="utf8">
</head>

<body onload="grokdoc.onLoad();">

<div id="header">
  <div class="g-section g-tpl-50-50 g-split">
    <div class="g-unit g-first">
      <a id="logo" href="index.html">Closure Library API Documentation</a>
    </div>

    <div class="g-unit">
      <div class="g-c">
        <strong>Go to class or file:</strong>
        <input type="text" id="ac">
      </div>
    </div>
  </div>
</div>





<div class="colmask rightmenu">
<div class="colleft">
    <div class="col1">
      <!-- Column 1 start -->

<div id="title">
       <span class="fn">debug</span>
</div>

<hr/>


  <h2>Classes</h2>
 <div class="fn-constructor">
        <a href="class_goog_debug_Console.html">
          goog.debug.Console</a><br/>
        <div class="class-details">Create and install a log handler that logs to window.console if available</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_DebugWindow.html">
          goog.debug.DebugWindow</a><br/>
        <div class="class-details">Provides a debug DebugWindow that is bound to the goog.debug.Logger.
It handles log messages and writes them to the DebugWindow. This doesn't
provide a lot of functionality that the old Gmail logging infrastructure
provided like saving debug logs for exporting to the server. Now that we
have an event-based logging infrastructure, we can encapsulate that
functionality in a separate class.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_DevCss.html">
          goog.debug.DevCss</a><br/>
        <div class="class-details">A class for solving development CSS issues/emulating the CSS Compiler.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_DivConsole.html">
          goog.debug.DivConsole</a><br/>
        <div class="class-details">A class for visualising logger calls in a div element.</div>
 </div>
 <div class="fn-constructor">
        <a href="interface_goog_debug_EntryPointMonitor.html">
          goog.debug.EntryPointMonitor</a><br/>
        <div class="class-details"><span class='nodesc'>No description.</span></div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_Error.html">
          goog.debug.Error</a><br/>
        <div class="class-details">Base class for custom error objects.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_ErrorHandler.html">
          goog.debug.ErrorHandler</a><br/>
        <div class="class-details">The ErrorHandler can be used to to wrap functions with a try/catch
statement. If an exception is thrown, the given error handler function will
be called.

When this object is disposed, it will stop handling exceptions and tracing.
It will also try to restore window.setTimeout and window.setInterval
if it wrapped them. Notice that in the general case, it is not technically
possible to remove the wrapper, because functions have no knowledge of
what they have been assigned to. So the app is responsible for other
forms of unwrapping.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_ErrorReporter.html">
          goog.debug.ErrorReporter</a><br/>
        <div class="class-details">Constructs an error reporter. Internal Use Only. To install an error
reporter see the #install method below.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_FancyWindow.html">
          goog.debug.FancyWindow</a><br/>
        <div class="class-details">Provides a Fancy extension to the DebugWindow class.  Allows filtering based
on loggers and levels.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_Formatter.html">
          goog.debug.Formatter</a><br/>
        <div class="class-details">Base class for Formatters. A Formatter is used to format a LogRecord into
something that can be displayed to the user.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_GcDiagnostics_.html">
          goog.debug.GcDiagnostics_</a><br/>
        <div class="class-details">Class used for singleton goog.debug.GcDiagnostics.  Used to hook into
the L2 ActiveX controller to profile garbage collection information in IE.
Can be used in combination with tracers (goog.debug.Trace), to provide object
allocation counts from within the tracers or used alone by invoking start and
stop.

See <a href="http://go/l2binary">http://go/l2binary</a> for the install.
TODO(user): Move the L2 installer somewhere more general.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_HtmlFormatter.html">
          goog.debug.HtmlFormatter</a><br/>
        <div class="class-details">Formatter that returns formatted html. See formatRecord for the classes
it uses for various types of formatted output.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_LogBuffer.html">
          goog.debug.LogBuffer</a><br/>
        <div class="class-details">Creates the log buffer.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_LogRecord.html">
          goog.debug.LogRecord</a><br/>
        <div class="class-details">LogRecord objects are used to pass logging requests between
the logging framework and individual log Handlers.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_Logger.html">
          goog.debug.Logger</a><br/>
        <div class="class-details">The Logger is an object used for logging debug messages. Loggers are
normally named, using a hierarchical dot-separated namespace. Logger names
can be arbitrary strings, but they should normally be based on the package
name or class name of the logged component, such as goog.net.BrowserChannel.

The Logger object is loosely based on the java class
java.util.logging.Logger. It supports different levels of filtering for
different loggers.

The logger object should never be instantiated by application code. It
should always use the goog.debug.Logger.getLogger function.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_RelativeTimeProvider.html">
          goog.debug.RelativeTimeProvider</a><br/>
        <div class="class-details">A simple object to keep track of a timestamp considered the start of
something. The main use is for the logger system to maintain a start time
that is occasionally reset. For example, in Gmail, we reset this relative
time at the start of a user action so that timings are offset from the
beginning of the action. This class also provides a singleton as the default
behavior for most use cases is to share the same start time.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_TextFormatter.html">
          goog.debug.TextFormatter</a><br/>
        <div class="class-details">Formatter that returns formatted plain text</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_debug_Trace_.html">
          goog.debug.Trace_</a><br/>
        <div class="class-details">Class used for singleton goog.debug.Trace.  Used for timing slow points in
the code. Based on the java Tracer class but optimized for javascript.
See com.google.common.base.Tracer.</div>
 </div>
   
<br/>

  <div class="legend">
        <span class="key publickey"></span><span>Public</span>
        <span class="key protectedkey"></span><span>Protected</span>
        <span class="key privatekey"></span><span>Private</span>
  </div>









<div class="section">
  <table class="horiz-rule">


  </table>
</div>




  <h2>Global Functions</h2>





<div class="section">
  <table class="horiz-rule">


     <tr class="even entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.catchErrors"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">catchErrors<span class="args">(<span class="arg">logFunc</span>,&nbsp;<span class="arg">opt_cancel</span>,&nbsp;<span class="arg">opt_target</span>)</span>
        </span>
      </div>


     <div class="entryOverview">
       Catches onerror events fired by windows and similar objects.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">logFunc</span>
        : <div class="fullType"><span class="type">function ((Object</span><span>&nbsp;|&nbsp;</span><span>?</span><span class="type">null)): </span></div>
        <div class="entryOverview">The function to call with the error information.</div>
     </td>
   </tr>
     
   <tr class="odd">
     <td>
        <span class="entryName">opt_cancel</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Boolean">boolean</a></span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">Whether to stop the error from reaching the browser.</div>
     </td>
   </tr>
     
   <tr class="even">
     <td>
        <span class="entryName">opt_target</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object">Object</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">Object that fires onerror events.</div>
     </td>
   </tr>
  </table>
      </div>
   
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line38">code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.deepExpose"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">deepExpose<span class="args">(<span class="arg">obj</span>,&nbsp;<span class="arg">opt_showFn</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Creates a string representing a given primitive or object, and for an
object, all its properties and nested objects.  WARNING: If an object is
given, it and all its nested objects will be modified.  To detect reference
cycles, this method identifies objects using goog.getUid() which mutates the
object.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">obj</span>
        : <div class="fullType"><span class="type">*</span></div>
        <div class="entryOverview">Object to expose.</div>
     </td>
   </tr>
     
   <tr class="odd">
     <td>
        <span class="entryName">opt_showFn</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Boolean">boolean</a></span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">Also show properties that are functions (by default, functions are omitted).</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            A string representation of <code>obj</code>.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line102">code &raquo;</a>
  </td>
     </tr>


     <tr class="even entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.enhanceError"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">enhanceError<span class="args">(<span class="arg">err</span>,&nbsp;<span class="arg">opt_message</span>)</span>
        </span>
        &#8658; <div class="fullType">(<span class="type">Error</span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
      </div>


     <div class="entryOverview">
       Converts an object to an Error if it's a String,
adds a stacktrace if there isn't one,
and optionally adds an extra message.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">err</span>
        : <div class="fullType">(<span class="type">Error</span><span>&nbsp;|&nbsp;</span><span class="type">null</span><span>&nbsp;|&nbsp;</span><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span>)</div>
        <div class="entryOverview">the original thrown object or string.</div>
     </td>
   </tr>
     
   <tr class="odd">
     <td>
        <span class="entryName">opt_message</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">optional additional message to add to the error.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType">(<span class="type">Error</span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>&nbsp;
            If err is a string, it is used to create a new Error, which is enhanced and returned.  Otherwise err itself is enhanced and returned.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line264">code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.expose"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">expose<span class="args">(<span class="arg">obj</span>,&nbsp;<span class="arg">opt_showFn</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Creates a string representing an object and all its properties.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">obj</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object">Object</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">Object to expose.</div>
     </td>
   </tr>
     
   <tr class="odd">
     <td>
        <span class="entryName">opt_showFn</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Boolean">boolean</a></span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">Show the functions as well as the properties, default is false.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            The string representation of <code>obj</code>.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line65">code &raquo;</a>
  </td>
     </tr>


     <tr class="even entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.exposeArray"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">exposeArray<span class="args">(<span class="arg">arr</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Recursively outputs a nested array as a string.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">arr</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array">Array</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
        <div class="entryOverview">The array.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            String representing nested array.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line160">code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.exposeException"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">exposeException<span class="args">(<span class="arg">err</span>,&nbsp;<span class="arg">opt_fn</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Exposes an exception that has been caught by a try...catch and outputs the
error with a stack trace.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">err</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object">Object</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
        <div class="entryOverview">Error object or string.</div>
     </td>
   </tr>
     
   <tr class="odd">
     <td>
        <span class="entryName">opt_fn</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Function">Function</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">Optional function to start stack trace from.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            Details of exception.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line180">code &raquo;</a>
  </td>
     </tr>


     <tr class="even entry private">
       <td class="access"></td>






  <td>
    <a name="goog.debug.fnNameResolver_"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">fnNameResolver_<span class="args">()</span>
        </span>
      </div>


     <div class="entryOverview">
       Resolves functions to their names.  Resolved function names will be cached.
     </div>

   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line486">code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.getFunctionName"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">getFunctionName<span class="args">(<span class="arg">fn</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Gets a function name
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">fn</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Function">Function</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
        <div class="entryOverview">Function to get name of.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            Function's name.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line429">code &raquo;</a>
  </td>
     </tr>


     <tr class="even entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.getStacktrace"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">getStacktrace<span class="args">(<span class="arg">opt_fn</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Gets the current stack trace, either starting from the caller or starting
from a specified function that's currently on the call stack.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">opt_fn</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Function">Function</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">Optional function to start getting the trace from. If not provided, defaults to the function that called this.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            Stack trace.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line333">code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry private">
       <td class="access"></td>






  <td>
    <a name="goog.debug.getStacktraceHelper_"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">getStacktraceHelper_<span class="args">(<span class="arg">fn</span>,&nbsp;<span class="arg">visited</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Private helper for getStacktrace().
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">fn</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Function">Function</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
        <div class="entryOverview">Function to start getting the trace from.</div>
     </td>
   </tr>
     
   <tr class="odd">
     <td>
        <span class="entryName">visited</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array">Array</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
        <div class="entryOverview">List of functions visited so far.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            Stack trace starting from function fn.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line345">code &raquo;</a>
  </td>
     </tr>


     <tr class="even entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.getStacktraceSimple"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">getStacktraceSimple<span class="args">(<span class="arg">opt_depth</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Gets the current stack trace. Simple and iterative - doesn't worry about
catching circular references or getting the args.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">opt_depth</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Number">number</a></span><span>&nbsp;|&nbsp;</span><span class="type">undefined</span>)</div>
        <div class="entryOverview">Optional maximum depth to trace back to.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            A string with the function names of all functions in the stack, separated by \n.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line288">code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.makeWhitespaceVisible"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">makeWhitespaceVisible<span class="args">(<span class="arg">string</span>)</span>
        </span>
        &#8658; <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
      </div>


     <div class="entryOverview">
       Makes whitespace visible by replacing it with printable characters.
This is useful in finding diffrences between the expected and the actual
output strings of a testcase.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">string</span>
        : <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>
        <div class="entryOverview">whose whitespace needs to be made visible.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String">string</a></span></div>&nbsp;
            string whose whitespace is made visible.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line464">code &raquo;</a>
  </td>
     </tr>


     <tr class="even entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.normalizeErrorObject"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">normalizeErrorObject<span class="args">(<span class="arg">err</span>)</span>
        </span>
        &#8658; <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object">Object</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
      </div>


     <div class="entryOverview">
       Normalizes the error/exception object between browsers.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">err</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object">Object</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
        <div class="entryOverview">Raw error object.</div>
     </td>
   </tr>
  </table>
      </div>
   
      <div class="detailsSection">
        <b>Returns:</b>&nbsp;<div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object">Object</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>&nbsp;
            Normalized error object.
      </div>
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line204">code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry public">
       <td class="access"></td>






  <td>
    <a name="goog.debug.setFunctionResolver"></a>


     <div class="arg">
       <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">setFunctionResolver<span class="args">(<span class="arg">resolver</span>)</span>
        </span>
      </div>


     <div class="entryOverview">
       Set a custom function name resolver.
     </div>


    <! -- Method details -->
    <div class="entryDetails">

      <div class="detailsSection">
        <b>Arguments: </b>






<table class="horiz-rule">
     
   <tr class="even">
     <td>
        <span class="entryName">resolver</span>
        : <div class="fullType"><span class="type">function ((Function</span><span>&nbsp;|&nbsp;</span><span class="type">null)): string</span></div>
        <div class="entryOverview">Resolves functions to their names.</div>
     </td>
   </tr>
  </table>
      </div>
   
  
    </div>
   
  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line419">code &raquo;</a>
  </td>
     </tr>


  </table>
</div>



  <h2>Global Properties</h2>





<div class="section">
  <table class="horiz-rule">


     <tr class="even entry public">
       <td class="access"></td>





  <a name="goog.debug.GcDiagnostics"></a>

  <td>


     <div class="arg">
        <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">GcDiagnostics</span>
        : <div class="fullType">(<span class="type"><a href="class_goog_debug_GcDiagnostics_.html">goog.debug.GcDiagnostics_</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
     </div>


     <div class="entryOverview">
       Singleton GcDiagnostics object
     </div>

  </td>


  <td class="view-code">
     <a href="closure_goog_debug_gcdiagnostics.js.source.html#line143">Code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry public">
       <td class="access"></td>





  <a name="goog.debug.MAX_STACK_DEPTH"></a>

  <td>


     <div class="arg">
        <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">MAX_STACK_DEPTH</span>
        : <div class="fullType"><span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Number">number</a></span></div>
     </div>


     <div class="entryOverview">
       Max length of stack to try and output
     </div>

  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line323">Code &raquo;</a>
  </td>
     </tr>


     <tr class="even entry public">
       <td class="access"></td>





  <a name="goog.debug.Trace"></a>

  <td>


     <div class="arg">
        <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">Trace</span>
        : <div class="fullType">(<span class="type"><a href="class_goog_debug_Trace_.html">goog.debug.Trace_</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
     </div>


     <div class="entryOverview">
       Singleton trace object
     </div>

  </td>


  <td class="view-code">
     <a href="closure_goog_debug_tracer.js.source.html#line721">Code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry public">
       <td class="access"></td>





  <a name="goog.debug.errorHandlerWeakDep"></a>

  <td>


     <div class="arg">
        <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">errorHandlerWeakDep</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object">Object</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
     </div>


     <div class="entryOverview">
       Dummy object to work around undefined properties compiler warning.
     </div>

  </td>


  <td class="view-code">
     <a href="closure_goog_debug_errorhandlerweakdep.js.source.html#line29">Code &raquo;</a>
  </td>
     </tr>


     <tr class="even entry private">
       <td class="access"></td>





  <a name="goog.debug.fnNameCache_"></a>

  <td>


     <div class="arg">
        <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.debug.</span><span class="entryName">fnNameCache_</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object">Object</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
     </div>


     <div class="entryOverview">
       Hash map for storing function names that have already been looked up.
     </div>

  </td>


  <td class="view-code">
     <a href="closure_goog_debug_debug.js.source.html#line478">Code &raquo;</a>
  </td>
     </tr>


  </table>
</div>
      <!-- Column 1 end -->
    </div>

        <div class="col2">
          <!-- Column 2 start -->
          <div class="col2-c">
            <h2 id="ref-head">Package debug</h2>
            <div id="localView"></div>
          </div>

          <div class="col2-c">
            <h2 id="ref-head">Package Reference</h2>
            <div id="sideTypeIndex" rootPath="" current="debug"></div>
          </div>
          <!-- Column 2 end -->
        </div>
</div>
</div>

</body>
</html>
