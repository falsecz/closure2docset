<!doctype html>


<html>
<head>
  <link rel="shortcut icon" href="static/images/favicon.ico" type="image/x-icon">
  <title>mockclassfactory.js (Closure Library API Documentation - JavaScript)</title>
  <link rel="stylesheet" href="static/css/base.css">
  <link rel="stylesheet" href="static/css/doc.css">
  <link rel="stylesheet" href="static/css/sidetree.css">
  <link rel="stylesheet" href="static/css/prettify.css">

  <script>
     var _staticFilePath = "static/";
     var _typeTreeName = "goog";
     var _fileTreeName = "Source";
  </script>

  <script src="static/js/doc.js">
  </script>


  <meta charset="utf8">
</head>

<body onload="grokdoc.onLoad();">

<div id="header">
  <div class="g-section g-tpl-50-50 g-split">
    <div class="g-unit g-first">
      <a id="logo" href="index.html">Closure Library API Documentation</a>
    </div>

    <div class="g-unit">
      <div class="g-c">
        <strong>Go to class or file:</strong>
        <input type="text" id="ac">
      </div>
    </div>
  </div>
</div>





<div class="colmask rightmenu">
<div class="colleft">
    <div class="col1">
      <!-- Column 1 start -->

<div id="title">
       <span class="fn">mockclassfactory.js</span>
</div>

<div class="g-section g-tpl-75-25">
  <div class="g-unit g-first" id="description">
    This file defines a factory that can be used to mock and
 replace an entire class.  This allows for mocks to be used effectively with
 "new" instead of having to inject all instances.  Essentially, a given class
 is replaced with a proxy to either a loose or strict mock.  Proxies locate
 the appropriate mock based on constructor arguments.

 The usage is:
 <ul>
 <li>Create a mock with one of the provided methods with a specifc set of
 constructor arguments
 <li>Set expectations by calling methods on the mock object
 <li>Call $replay() on the mock object
 <li>Instantiate the object as normal
 <li>Call $verify() to make sure that expectations were met
 <li>Call reset on the factory to revert all classes back to their original
 state
 </li></li></li></li></li></li></ul>

 For examples, please see the unit test.
  </div>
  

        <div class="g-unit" id="useful-links">
          <div class="title">Useful links</div>
          <ol>
            <li><a href="closure_goog_testing_mockclassfactory.js.source.html"><span class='source-code-link'>Source Code</span></a></li>
            <li><a href="http://code.google.com/p/closure-library/source/browse/trunk/closure/goog/testing/mockclassfactory.js">SVN</a></li>
          </ol>
        </div>
</div>

<h2 class="g-first">File Location</h2>
  <div class="g-section g-tpl-20-80">
    <div class="g-unit g-first">
      <div class="g-c-cell code-label">testing/mockclassfactory.js</div>
    </div>
  </div>
<hr/>


  <h2>Classes</h2>
 <div class="fn-constructor">
        <a href="class_goog_testing_MockClassFactory.html">
          goog.testing.MockClassFactory</a><br/>
        <div class="class-details">A factory used to create new mock class instances.  It is able to generate
both static and loose mocks.  The MockClassFactory is a singleton since it
tracks the classes that have been mocked internally.</div>
 </div>
 <div class="fn-constructor">
        <a href="class_goog_testing_MockClassRecord.html">
          goog.testing.MockClassRecord</a><br/>
        <div class="class-details">A record that represents all the data associated with a mock replacement of
a given class.</div>
 </div>
      
<br/>

  <div class="legend">
        <span class="key publickey"></span><span>Public</span>
        <span class="key protectedkey"></span><span>Protected</span>
        <span class="key privatekey"></span><span>Private</span>
  </div>









<div class="section">
  <table class="horiz-rule">


  </table>
</div>







  <h2>Global Properties</h2>





<div class="section">
  <table class="horiz-rule">


     <tr class="even entry private">
       <td class="access"></td>





  <a name="goog.testing.MockClassFactory.PROTOTYPE_FIELDS_"></a>

  <td>


     <div class="arg">
        <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.testing.MockClassFactory.</span><span class="entryName">PROTOTYPE_FIELDS_</span>
        : <div class="fullType">(<span class="type"><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array">Array</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
     </div>


     <div class="entryOverview">
       The names of the fields that are defined on Object.prototype.
     </div>

  </td>


  <td class="view-code">
     <a href="closure_goog_testing_mockclassfactory.js.source.html#line243">Code &raquo;</a>
  </td>
     </tr>


     <tr class="odd entry private">
       <td class="access"></td>





  <a name="goog.testing.MockClassFactory.instance_"></a>

  <td>


     <div class="arg">
        <img align="left" src="static/images/blank.gif">

        <span class="entryNamespace">goog.testing.MockClassFactory.</span><span class="entryName">instance_</span>
        : <div class="fullType">(<span class="type"><a href="class_goog_testing_MockClassFactory.html">goog.testing.MockClassFactory</a></span><span>&nbsp;|&nbsp;</span><span class="type">null</span>)</div>
     </div>


     <div class="entryOverview">
       A singleton instance of the MockClassFactory.
     </div>

  </td>


  <td class="view-code">
     <a href="closure_goog_testing_mockclassfactory.js.source.html#line235">Code &raquo;</a>
  </td>
     </tr>


  </table>
</div>



      <!-- Column 1 end -->
    </div>

        <div class="col2">
          <!-- Column 2 start -->
          <div class="col2-c">
            <h2 id="ref-head">Directory testing</h2>
            <div id="localView"></div>
          </div>

          <div class="col2-c">
            <h2 id="ref-head">File Reference</h2>
            <div id="sideFileIndex" rootPath="" current="testing/mockclassfactory.js"></div>
          </div>
          <!-- Column 2 end -->
        </div>
</div>
</div>

</body>
</html>
